{
    "openapi": "3.0.0",
    "info": {
        "title": "Venue Boost API",
        "description": "This is a Venue Boost API v1",
        "version": "1.0"
    },
    "paths": {
        "/ai/chat": {
            "post": {
                "tags": [
                    "AI"
                ],
                "summary": "Send a chat request to the OpenAI",
                "operationId": "20ca5d91189bea4f2ca2022e6e02858d",
                "responses": {
                    "200": {
                        "description": "List chat responses from OpenAI"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/analytics/inventory-usage-over-time": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get inventory usage over time",
                "operationId": "b5fc85bcd2d38c4b2e6a13948cdf6283",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date (YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date (YYYY-MM-DD)",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category": {
                                                        "description": "The name of the inventory category",
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "The label of the inventory",
                                                        "type": "string"
                                                    },
                                                    "products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the product",
                                                                    "type": "string"
                                                                },
                                                                "total_quantity_used": {
                                                                    "description": "The total quantity of the product used within the specified time range",
                                                                    "type": "integer"
                                                                },
                                                                "times_used": {
                                                                    "description": "The number of times the product is used within the specified time range",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login to the application (SN Boost)",
                "operationId": "login",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "email": {
                                        "type": "string"
                                    },
                                    "password": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout from the application (SN Boost)",
                "operationId": "logout",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh a token",
                "operationId": "refresh",
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/user-profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "description": "Get user profile.",
                "operationId": "2514bb8354aba94b8bec5b95ee3a151a",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "description": "User ID",
                                                    "type": "integer"
                                                },
                                                "name": {
                                                    "description": "User name",
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "description": "User email",
                                                    "type": "string"
                                                },
                                                "restaurant": {
                                                    "properties": {
                                                        "id": {
                                                            "description": "Restaurant ID",
                                                            "type": "integer"
                                                        },
                                                        "cuisine_types": {
                                                            "description": "Array of cuisine type IDs",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "amenities": {
                                                            "description": "Array of amenity IDs",
                                                            "type": "array",
                                                            "items": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "address": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Address ID",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "nullable": true
                                                        },
                                                        "plan": {
                                                            "properties": {
                                                                "id": {
                                                                    "description": "Pricing plan ID",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object",
                                                            "nullable": true
                                                        }
                                                    },
                                                    "type": "object",
                                                    "nullable": true
                                                },
                                                "employee": {
                                                    "type": "object",
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/request-change-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Request email change",
                "operationId": "e667c1e367825d644cd7ab78aef473a2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email"
                                ],
                                "properties": {
                                    "email": {
                                        "description": "New email address",
                                        "type": "string",
                                        "format": "email"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email change request successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/verify-change-email": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Verify email change",
                "operationId": "0a58a1bf1c55d04aa4d3cb10848b40bb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "code"
                                ],
                                "properties": {
                                    "code": {
                                        "description": "Verification code",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email change verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "Bearer": []
                    }
                ]
            }
        },
        "/users/change-password": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Change password",
                "operationId": "f700429d2c89230cdf24c8c654f42849",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "cur_password",
                                    "password"
                                ],
                                "properties": {
                                    "cur_password": {
                                        "description": "Current password",
                                        "type": "string"
                                    },
                                    "password": {
                                        "description": "New password",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Password changed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Invalid current password",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve a list of all blogs",
                "operationId": "282d287824a406c94f87dc1fa348b8aa",
                "responses": {
                    "200": {
                        "description": "Successfully retrieved list of blogs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "description": "List of blogs",
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "title": {
                                                "type": "string",
                                                "example": "Blog Title"
                                            },
                                            "content": {
                                                "type": "string",
                                                "example": "Blog Content"
                                            },
                                            "restaurant_id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "image": {
                                                "type": "string",
                                                "example": "Blog Image"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Create a new blog",
                "operationId": "017af8c9129ef5399520bc969f57cc53",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content",
                                    "restaurant_id"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Blog Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Blog Content"
                                    },
                                    "restaurant_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created a new blog",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Blog created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "The title field is required."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/blogs/{id}": {
            "get": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Retrieve a single blog",
                "operationId": "1140030fe1ea823ef3f69ac1dee6939e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of blog to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully retrieved a single blog",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Blog Title"
                                        },
                                        "content": {
                                            "type": "string",
                                            "example": "Blog Content"
                                        },
                                        "restaurant_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "Blog Image"
                                        },
                                        "views": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-05-01T12:00:00.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-05-01T12:00:00.000000Z"
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Blog not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Update an existing blog",
                "operationId": "cc29732adc9a9f1027eceb39c7d6acc5",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated the blog",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "title": {
                                            "type": "string",
                                            "example": "Blog Title"
                                        },
                                        "content": {
                                            "type": "string",
                                            "example": "Blog Content"
                                        },
                                        "restaurant_id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "image": {
                                            "type": "string",
                                            "example": "Blog Image"
                                        },
                                        "views": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "2021-05-01T12:00:00.000000Z"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "2021-05-01T12:00:00.000000Z"
                                        },
                                        "categories": {
                                            "type": "array",
                                            "items": {
                                                "type": "integer"
                                            },
                                            "example": [
                                                1,
                                                2,
                                                3
                                            ]
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Blog not found"
                    },
                    "422": {
                        "description": "Validation errors"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Blogs"
                ],
                "summary": "Delete a specific blog",
                "operationId": "fd5fd5ea30c1b7eaf8c26bb055cc88aa",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the blog to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully deleted the blog"
                    },
                    "404": {
                        "description": "The requested blog does not exist"
                    }
                }
            }
        },
        "/menu/categories": {
            "get": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Get all categories",
                "operationId": "f95e12e3d5c2aab111104a8e0eca0baa",
                "responses": {
                    "200": {
                        "description": "Categories retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Categories retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Restaurant not found for the user making the API call",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Create a category",
                "operationId": "4ff4215113f4c5f05d01dd5bc6e7961a",
                "requestBody": {
                    "description": "Pass category details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "category"
                                ],
                                "properties": {
                                    "category": {
                                        "properties": {
                                            "name": {
                                                "type": "string",
                                                "example": "Category name"
                                            },
                                            "description": {
                                                "type": "string",
                                                "example": "Category description"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Restaurant not found for the user making the API call",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/menu/categories/{id}": {
            "delete": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Delete a category",
                "operationId": "414d30197bec9da2054d5e4f25077d73",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Category id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Category deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/staff/employees": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "List all employees and their relationships",
                "description": "Returns a list of all employees and their relationships with managers and owners",
                "operationId": "listEmployees",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Create a new employee",
                "description": "Creates a new employee with the given details",
                "operationId": "82054c9bbba4ed018045fced72cd9711",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "role_id",
                                    "salary",
                                    "salary_frequency"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "johndoe@example.com"
                                    },
                                    "role_id": {
                                        "type": "integer",
                                        "example": 3
                                    },
                                    "salary": {
                                        "type": "number",
                                        "format": "decimal",
                                        "example": 2000
                                    },
                                    "hire_date": {
                                        "type": "string"
                                    },
                                    "salary_frequency": {
                                        "type": "string",
                                        "enum": [
                                            "daily",
                                            "weekly",
                                            "bi-weekly",
                                            "monthly"
                                        ],
                                        "example": "monthly"
                                    },
                                    "manager_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "owner_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "currency_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Employee created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid request data",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "email": [
                                                    "The email has already been taken."
                                                ],
                                                "salary_frequency": [
                                                    "The selected salary frequency is invalid."
                                                ],
                                                "manager_id": [
                                                    "The selected manager id is invalid."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/employees/{id}": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Get an employee with their related records",
                "operationId": "b062b1d8b6b244cd68a33dc52c504d9d",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the employee data and related records",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "description": "Employee data"
                                        },
                                        "salary_histories": {
                                            "description": "Salary history records of the employee",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "performances": {
                                            "description": "Performance records of the employee",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "expenses": {
                                            "description": "Expense records of the employee",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "payrolls": {
                                            "description": "Payroll records of the employee",
                                            "type": "array",
                                            "items": {}
                                        },
                                        "role": {
                                            "description": "Role of the employee"
                                        },
                                        "manager": {
                                            "description": "Manager of the employee"
                                        },
                                        "owner": {
                                            "description": "Owner of the employee"
                                        },
                                        "owner_employees": {
                                            "description": "Employees of the owner of the employee",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "employees": {
                                            "description": "Employees who report to the employee",
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Update an employee",
                "description": "Update an employee record",
                "operationId": "4c262f3c53220f719a18b90ad397570e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of employee to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "salary",
                                    "salary_frequency"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "email": {
                                        "type": "string"
                                    },
                                    "salary": {
                                        "type": "number"
                                    },
                                    "salary_frequency": {
                                        "type": "string",
                                        "enum": [
                                            "daily",
                                            "weekly",
                                            "bi-weekly",
                                            "monthly"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Employee updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "employee": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "hire_date": {
                                                    "type": "string"
                                                },
                                                "role_id": {
                                                    "type": "integer",
                                                    "format": "int64"
                                                },
                                                "manager_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "nullable": true
                                                },
                                                "owner_id": {
                                                    "type": "integer",
                                                    "format": "int64",
                                                    "nullable": true
                                                },
                                                "salary": {
                                                    "type": "number",
                                                    "format": "float"
                                                },
                                                "salary_frequency": {
                                                    "type": "string",
                                                    "enum": [
                                                        "daily",
                                                        "weekly",
                                                        "bi-weekly",
                                                        "monthly"
                                                    ]
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Employee not found"
                    }
                }
            }
        },
        "/staff/expense": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "List all expenses",
                "description": "Returns a list of all expenses",
                "operationId": "listExpenses",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Create a new expense",
                "operationId": "createExpense",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer"
                                    },
                                    "type": {
                                        "type": "string"
                                    },
                                    "amount": {
                                        "type": "number"
                                    },
                                    "date": {
                                        "type": "string",
                                        "format": "date"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "employee_id": 1,
                                    "type": "Mileage",
                                    "amount": "50",
                                    "date": "2022-01-01"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    }
                }
            }
        },
        "/staff/expenses/{id}": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Get expense by Employee ID",
                "operationId": "4e7ea9124afec14a7dbbb42d0fc09245",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "422": {
                        "description": "Invalid ID"
                    }
                }
            }
        },
        "/categories": {
            "get": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Retrieve all FAQ categories",
                "description": "Retrieves all FAQ categories",
                "operationId": "64b698831e105d83a7e88f95c50b9477",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "title": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/category": {
            "post": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Create an FAQ category",
                "description": "Create an FAQ category with the specified data",
                "operationId": "812e7a510797376ed24f8cf4ed454042",
                "requestBody": {
                    "description": "Data to create an FAQ category",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The FAQ category was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Delete an FAQ category",
                "description": "Delete an FAQ category with the specified ID",
                "operationId": "e06422872ee188823dd6dc8bf5f3a9d3",
                "requestBody": {
                    "description": "Data to delete an FAQ category",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The FAQ category was deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested category does not exist",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/faqs": {
            "get": {
                "tags": [
                    "FAQs"
                ],
                "summary": "List all FAQs",
                "description": "List all FAQs with their corresponding categories",
                "operationId": "265e344237e4a1f1711d5f401f475ad1",
                "responses": {
                    "200": {
                        "description": "List of FAQs",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "faq_cat_id": {
                                                        "type": "integer"
                                                    },
                                                    "question": {
                                                        "type": "string"
                                                    },
                                                    "answer": {
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Create an FAQ",
                "description": "Create an FAQ with the specified data",
                "operationId": "f4882f27c2a950abaa30ae9cbb824a2c",
                "requestBody": {
                    "description": "Data to create or update an FAQ",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "question": {
                                        "type": "string"
                                    },
                                    "answer": {
                                        "type": "string"
                                    },
                                    "category": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "The FAQ was created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "additionalProperties": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/": {
            "delete": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Delete an FAQ",
                "description": "Delete an FAQ by faq ID",
                "operationId": "2b5efe7722786b3db87431faf87d45e8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "ID of the FAQ to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "The FAQ was deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "The requested faq does not exist or has already been deleted",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/search": {
            "get": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Search FAQs by question",
                "description": "Searches FAQs by question and returns matching results",
                "operationId": "f1a8348834d72bc6f1462ed760847c59",
                "parameters": [
                    {
                        "name": "query",
                        "in": "query",
                        "description": "The search query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "faq_cat_id": {
                                                "type": "integer"
                                            },
                                            "question": {
                                                "type": "string"
                                            },
                                            "answer": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/by-category": {
            "get": {
                "tags": [
                    "FAQs"
                ],
                "summary": "Search FAQs by category",
                "description": "Filter FAQs by category and returns matching results",
                "operationId": "09496997cd3aac6f2536219c391e600e",
                "parameters": [
                    {
                        "name": "category",
                        "in": "query",
                        "description": "The category to search for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer"
                                            },
                                            "faq_cat_id": {
                                                "type": "integer"
                                            },
                                            "question": {
                                                "type": "string"
                                            },
                                            "answer": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            },
                                            "updated_at": {
                                                "type": "string",
                                                "format": "date-time"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/guests": {
            "get": {
                "tags": [
                    "Guests"
                ],
                "summary": "Get a list of guests",
                "operationId": "4cf68250c1366acc3fed0fdec6415d09",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Guests retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "email": {
                                                        "type": "string"
                                                    },
                                                    "address": {
                                                        "type": "string"
                                                    },
                                                    "phone": {
                                                        "type": "string"
                                                    },
                                                    "notes": {
                                                        "type": "string"
                                                    },
                                                    "is_main": {
                                                        "type": "boolean"
                                                    },
                                                    "sn_platform_user": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/inventory": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "List all inventories with related categories and products",
                "operationId": "9b42d507dba598017e2b4377ff6475ff",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category": {
                                                        "description": "The name of the inventory category",
                                                        "type": "string"
                                                    },
                                                    "label": {
                                                        "description": "The label of the inventory",
                                                        "type": "string"
                                                    },
                                                    "products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "name": {
                                                                    "description": "The name of the product",
                                                                    "type": "string"
                                                                },
                                                                "quantity": {
                                                                    "description": "The quantity of the product in the inventory",
                                                                    "type": "integer"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Add new inventory",
                "operationId": "cee458e0f3a8513149e6ad6b459ffb00",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "category_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "label": {
                                        "type": "string",
                                        "example": "Drinks Inventory"
                                    },
                                    "options": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "quantity": {
                                                    "type": "integer",
                                                    "example": 10
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "example": [
                                            {
                                                "product_id": 1,
                                                "quantity": 10
                                            },
                                            {
                                                "product_id": 2,
                                                "quantity": 5
                                            }
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory created successfully"
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "404": {
                        "description": "Category not found"
                    },
                    "422": {
                        "description": "Invalid ID"
                    }
                }
            }
        },
        "/inventory/{id}": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Get a single inventory by ID",
                "operationId": "7304ee59015391378b6b47d3731c073b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the inventory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "category": {
                                                    "description": "The name of the inventory category",
                                                    "type": "string"
                                                },
                                                "label": {
                                                    "description": "The label of the inventory",
                                                    "type": "string"
                                                },
                                                "products": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "description": "The name of the product",
                                                                "type": "string"
                                                            },
                                                            "quantity": {
                                                                "description": "The quantity of the product in the inventory",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Inventory not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Update an inventory",
                "operationId": "5257c6907380e3ad111ac3bdf2bcc5ad",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the inventory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "ID of the product",
                                                    "type": "integer"
                                                },
                                                "quantity": {
                                                    "description": "Updated quantity of the product in the inventory",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "label": {
                                        "description": "Updated label of the inventory",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Inventory updated successfully"
                    },
                    "404": {
                        "description": "Inventory not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/inventory/{inventoryId}/activities": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Retrieve activities for an inventory",
                "operationId": "288bfbe20cfbd62347a4bdf6aaa3c1cc",
                "parameters": [
                    {
                        "name": "inventoryId",
                        "in": "path",
                        "description": "ID of the inventory",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "activities": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "The activity ID",
                                                        "type": "integer"
                                                    },
                                                    "description": {
                                                        "description": "The description of the activity",
                                                        "type": "string"
                                                    },
                                                    "quantity": {
                                                        "description": "The quantity involved in the activity",
                                                        "type": "integer"
                                                    },
                                                    "type": {
                                                        "description": "The type of the activity",
                                                        "type": "string"
                                                    },
                                                    "order_id": {
                                                        "description": "The ID of the related order",
                                                        "type": "integer"
                                                    },
                                                    "created_at": {
                                                        "description": "The date and time the activity was created",
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Restaurant not found"
                    },
                    "404": {
                        "description": "Inventory not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/inventory/{inventoryId}/usage-history": {
            "get": {
                "tags": [
                    "Inventory"
                ],
                "summary": "Retrieve the inventory usage history",
                "description": "Retrieve the inventory usage history.",
                "operationId": "a74b26b83892fb7ba05d1b0f0329b9e1",
                "parameters": [
                    {
                        "name": "inventoryId",
                        "in": "path",
                        "description": "The ID of the inventory",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "description": "The date of inventory usage",
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "quantity_used": {
                                                        "description": "The quantity of the inventory used on the date",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "Inventory not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/loyalty/enrolled-guests": {
            "get": {
                "tags": [
                    "Loyalty"
                ],
                "summary": "Get list of enrolled guests by Loyalty ID",
                "operationId": "c83d674bd9410810884ad2ae5bbe81f8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty Program ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue Short Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Enrolled guests retrieved successfully"
                                        },
                                        "data": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/loyalty": {
            "put": {
                "tags": [
                    "Loyalty"
                ],
                "summary": "Update a loyalty program",
                "operationId": "6592850d2c335a28e7dcb01672ac8a3d",
                "requestBody": {
                    "description": "Promotion status details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "discount_id": {
                                        "description": "Discount ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "Discount status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": "1"
                                    },
                                    "title": {
                                        "description": "Promotion title",
                                        "type": "string",
                                        "example": "Promotion title"
                                    },
                                    "Description": {
                                        "description": "Promotion Description",
                                        "type": "string",
                                        "example": "Promotion Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Loyalty"
                ],
                "summary": "Store a new loyalty",
                "operationId": "71b23588e353462a82d1beffd3530c5c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "venue_short_code": {
                                        "description": "Venue short code",
                                        "type": "string"
                                    },
                                    "title": {
                                        "description": "Title",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Loyalty program created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "data": {
                                            "description": "Loyalty program details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Venue not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/loyalty/{id}": {
            "get": {
                "tags": [
                    "Loyalty"
                ],
                "summary": "Show loyalty details",
                "operationId": "2e9d3325973303bf51fbc31b58213022",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Loyalty ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue short code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Loyalty not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/ml/tsa-occupancy-rates-forecast/model-evaluations": {
            "get": {
                "tags": [
                    "OccupancyRatesForecast"
                ],
                "summary": "Get Model Evaluations",
                "operationId": "3d994b6f59ca4740e84fcb6f96220812",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ml/tsa-occupancy-rates-forecast/model-summaries": {
            "get": {
                "tags": [
                    "OccupancyRatesForecast"
                ],
                "summary": "Get Model Summaries",
                "operationId": "24a517e3a64aac255abc1624da1c0183",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ml/tsa-occupancy-rates-forecast/occupancy-rate-forecasts": {
            "get": {
                "tags": [
                    "OccupancyRatesForecast"
                ],
                "summary": "Get Occupancy Rate Forecasts",
                "operationId": "b5ad656293743ab9633c615fd5820112",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/ml/tsa-occupancy-rates-forecast/prepared-occupancy-data": {
            "get": {
                "tags": [
                    "OccupancyRatesForecast"
                ],
                "summary": "Get Prepared Occupancy Data",
                "operationId": "1fc20dcc2729191412cc8c10ea95378b",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            }
        },
        "/orders": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new order",
                "operationId": "678d2de8caf189dcc06cc1ff54ca77c5",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "total_amount": {
                                        "description": "The total amount of the order",
                                        "type": "number"
                                    },
                                    "customer_id": {
                                        "description": "The ID of the customer (optional)",
                                        "type": "integer"
                                    },
                                    "reservation_id": {
                                        "description": "The ID of the reservation (optional)",
                                        "type": "integer"
                                    },
                                    "order_products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "description": "The ID of the product",
                                                    "type": "integer"
                                                },
                                                "product_instructions": {
                                                    "description": "Instructions for the product (optional)",
                                                    "type": "string"
                                                },
                                                "product_quantity": {
                                                    "description": "The quantity of the product",
                                                    "type": "integer"
                                                },
                                                "product_total_price": {
                                                    "description": "The total price of the product",
                                                    "type": "number"
                                                },
                                                "product_discount_price": {
                                                    "description": "The discount price of the product (optional)",
                                                    "type": "number"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order added successfully"
                    },
                    "400": {
                        "description": "Validation error or insufficient quantity in inventory"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/orders/accept": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Accept an order",
                "description": "Accept an order",
                "operationId": "c6401d846424bad9daa0f9bfc56670e4",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "description": "The ID of the order",
                                        "type": "integer",
                                        "example": 12345
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "order": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Order accepted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/delivery-request": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create an order delivery request",
                "operationId": "430828f8c413b8b6381f9d5a6f7640f1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "order_id": {
                                        "description": "The ID of the order",
                                        "type": "integer",
                                        "example": 12345
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "delivery_request": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Delivery request created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Order not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/by-vendor": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Get orders by vendor",
                "operationId": "45202d155982a37c0d42542ed190e8b9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "orders": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Orders retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/create-customer": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Create a new customer",
                "operationId": "a6f83226616c0851aef8e799ed324bdb",
                "requestBody": {
                    "description": "Data for the new customer",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "customer",
                                    "shipping_address"
                                ],
                                "properties": {
                                    "customer": {
                                        "required": [
                                            "first_name",
                                            "last_name",
                                            "phone",
                                            "email"
                                        ],
                                        "properties": {
                                            "first_name": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "last_name": {
                                                "type": "string",
                                                "example": "string"
                                            },
                                            "phone": {
                                                "type": "string",
                                                "example": "0685555555"
                                            },
                                            "email": {
                                                "type": "string",
                                                "format": "email",
                                                "example": "strin@string.com"
                                            }
                                        },
                                        "type": "object"
                                    },
                                    "shipping_address": {
                                        "required": [
                                            "line1",
                                            "state",
                                            "city",
                                            "postal_code"
                                        ],
                                        "properties": {
                                            "line1": {
                                                "type": "string",
                                                "example": "Sheshi Skenderbeu"
                                            },
                                            "line2": {
                                                "type": "string",
                                                "example": ""
                                            },
                                            "state": {
                                                "type": "string",
                                                "example": "TR"
                                            },
                                            "city": {
                                                "type": "string",
                                                "example": "Tirana"
                                            },
                                            "postal_code": {
                                                "type": "string",
                                                "example": "1013"
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Customer created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Customer created successfully"
                                        },
                                        "customer_id": {
                                            "type": "integer",
                                            "example": 123
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthorized access"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/orders/finalize-order": {
            "post": {
                "tags": [
                    "Orders"
                ],
                "summary": "Finalize an order",
                "description": "Finalizes the details of an order including processing payments, inventory, and sending confirmation.",
                "operationId": "2518ea9c18a0b72f2c63ec21fe6561f2",
                "requestBody": {
                    "description": "Data needed to finalize the order",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subtotal",
                                    "order_products",
                                    "customer_id",
                                    "is_for_self",
                                    "split_payments"
                                ],
                                "properties": {
                                    "subtotal": {
                                        "type": "number",
                                        "example": 100.5
                                    },
                                    "order_products": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "product_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "product_quantity": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "product_total_price": {
                                                    "type": "number",
                                                    "example": 50.25
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "customer_id": {
                                        "type": "integer",
                                        "example": 123
                                    },
                                    "is_for_self": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "split_payments": {
                                        "type": "array",
                                        "items": {
                                            "properties": {
                                                "payment_type": {
                                                    "type": "string",
                                                    "example": "card"
                                                },
                                                "amount": {
                                                    "type": "number",
                                                    "example": 100.5
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Leave at front door."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Order has been finalized successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid input data"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "An unexpected error occurred"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/payroll": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "List payroll information for all venue employees",
                "operationId": "38be710f9bce9515808507ba9973ec03",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "employee_name": {
                                                        "type": "string",
                                                        "example": "John Doe"
                                                    },
                                                    "salary": {
                                                        "type": "integer",
                                                        "example": 50000
                                                    },
                                                    "bonus": {
                                                        "type": "integer",
                                                        "example": 2000
                                                    },
                                                    "deductions": {
                                                        "type": "integer",
                                                        "example": 1000
                                                    },
                                                    "taxes": {
                                                        "type": "integer",
                                                        "example": 3000
                                                    },
                                                    "net_pay": {
                                                        "type": "integer",
                                                        "example": 42000
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staff/payroll/generate-paycheck": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Generate paycheck for a specific employee",
                "operationId": "8bb9c1213b81495b7ca4443becd3956c",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Paycheck generated successfully"
                                        },
                                        "paycheck": {
                                            "type": "string",
                                            "example": "http://localhost/paychecks/1.xls"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staff/payroll/calculate": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Calculate payroll for an employee",
                "operationId": "6986c55a8962de6f5db06a416bc66976",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer"
                                    },
                                    "month": {
                                        "type": "string",
                                        "example": "January"
                                    },
                                    "year": {
                                        "type": "integer",
                                        "example": "2022"
                                    },
                                    "hours_worked": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "176"
                                    },
                                    "overtime_hours": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "20"
                                    },
                                    "bonus": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "1000"
                                    },
                                    "deductions": {
                                        "type": "number",
                                        "format": "float",
                                        "example": "200"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Payroll calculated successfully"
                                        },
                                        "payroll": {
                                            "properties": {
                                                "employee_id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                },
                                                "month": {
                                                    "type": "string",
                                                    "example": "January"
                                                },
                                                "year": {
                                                    "type": "integer",
                                                    "example": "2022"
                                                },
                                                "hours_worked": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "176"
                                                },
                                                "overtime_hours": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "20"
                                                },
                                                "bonus": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "1000"
                                                },
                                                "deductions": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "200"
                                                },
                                                "taxes": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "200"
                                                },
                                                "net_pay": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": "200"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2021-09-01T12:00:00.000000Z"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2021-09-01T12:00:00.000000Z"
                                                },
                                                "id": {
                                                    "type": "integer",
                                                    "example": "1"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staff/reports/generate": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Generate staff report",
                "operationId": "21f3d047f8a706a8829ae7afb542dcd6",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Report generated successfully"
                                        },
                                        "report_url": {
                                            "type": "string",
                                            "example": "http://localhost/reports/staff_report.pdf"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/staff/calculate-overtime": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Calculate overtime pay for an employee",
                "description": "Calculates the overtime pay for an employee based on their regular hours and additional hours worked, and saves the result in the employee's overtime_pay field.",
                "operationId": "e6f7106ae967d17f67de4b9b8d62f652",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "description": "ID of the employee",
                                        "type": "integer"
                                    },
                                    "additional_hours": {
                                        "description": "Additional hours worked by the employee",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "overtime_pay": {
                                            "description": "Overtime pay for the employee",
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/approve-time-off": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Approve time off request",
                "operationId": "approveTimeOff",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "schedule_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Time off request approved"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee or Schedule not found"
                    }
                }
            }
        },
        "/staff/view-schedule-conflicts": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "View schedule conflicts for an employee",
                "operationId": "viewScheduleConflicts",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "ID of the employee to view schedule conflicts for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule conflicts"
                                        },
                                        "schedule_conflicts": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "employee_id": {
                                                        "type": "integer"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "start_time": {
                                                        "type": "string"
                                                    },
                                                    "end_time": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/schedules": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Create a new schedule for an employee",
                "operationId": "9137457308a4f38e1359ea5d18d9d8c0",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "date": {
                                        "type": "string",
                                        "example": "08:00:00"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "example": "08:00:00"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "example": "16:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Schedule created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "schedule": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "employee_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "date": {
                                                    "type": "string",
                                                    "example": "2020-01-01"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "example": "08:00:00"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "example": "16:00:00"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "pending"
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "example": "2020-01-01 00:00:00"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "example": "2020-01-01 00:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request"
                    }
                }
            }
        },
        "/staff/view-schedule-to-requests": {
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "View schedule time off requests for an employee",
                "operationId": "viewScheduleTimeOff(TO)Requests",
                "parameters": [
                    {
                        "name": "employee_id",
                        "in": "query",
                        "description": "ID of the employee to view schedule time-off requests for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule (TO) Requests retrieved successfully"
                                        },
                                        "schedule_to_requests": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "employee_id": {
                                                        "type": "integer"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "start_time": {
                                                        "type": "string"
                                                    },
                                                    "end_time": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Employee not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Employee not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/view-all-schedule-to-requests": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "View all schedule time off requests for a restaurant",
                "operationId": "viewAllScheduleTimeOff(TO)Requests",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Schedule (TO) Requests retrieved successfully"
                                        },
                                        "schedule_to_requests": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "employee_id": {
                                                        "type": "integer"
                                                    },
                                                    "date": {
                                                        "type": "string"
                                                    },
                                                    "start_time": {
                                                        "type": "string"
                                                    },
                                                    "end_time": {
                                                        "type": "string"
                                                    },
                                                    "status": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Restaurant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Restaurant not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/performance": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "List all performances",
                "description": "Returns a list of all performances",
                "operationId": "listPerformance",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Create a new performance record for staff employee",
                "operationId": "createPerformance",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "employee_id": {
                                        "type": "integer"
                                    },
                                    "attendance": {
                                        "type": "integer"
                                    },
                                    "punctuality": {
                                        "type": "integer"
                                    },
                                    "productivity": {
                                        "type": "integer"
                                    },
                                    "performance_date": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "422": {
                        "description": "Validation Error"
                    }
                }
            }
        },
        "/staff/performance/{id}": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "Get performance by Employee ID",
                "operationId": "793cc24154e12cf0329e09341ed2402e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the employee",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Employee not found"
                    },
                    "422": {
                        "description": "Invalid ID"
                    }
                }
            }
        },
        "/pricing-plans": {
            "get": {
                "tags": [
                    "Pricing Plans"
                ],
                "summary": "Retrieves a list of all pricing plans",
                "operationId": "eeae853ec124bcd1b881dae677c086b4",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    }
                }
            },
            "post": {
                "tags": [
                    "Pricing Plans"
                ],
                "summary": "Allows staff to create a new pricing plan",
                "operationId": "3bdefeae4b71aef78ea8a6e42bc0edb3",
                "requestBody": {
                    "description": "Pricing plan details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "monthly_cost",
                                    "yearly_cost",
                                    "currency",
                                    "features"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Basic"
                                    },
                                    "monthly_cost": {
                                        "type": "number",
                                        "example": 10
                                    },
                                    "yearly_cost": {
                                        "type": "number",
                                        "example": 100
                                    },
                                    "currency": {
                                        "type": "string",
                                        "example": "USD"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "feature1",
                                            "feature2"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successfully created"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/pricing-plans/{id}": {
            "get": {
                "tags": [
                    "Pricing Plans"
                ],
                "summary": "Retrieves a specific pricing plan by ID",
                "operationId": "d3513a6313bc7044b4dc8e54687b6e3e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Pricing plan not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Pricing Plans"
                ],
                "summary": "Update an existing pricing plan",
                "operationId": "be20b52dee9cbcc2e585ebbea1400b21",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the pricing plan",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Pricing plan data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "monthly_cost",
                                    "yearly_cost",
                                    "currency",
                                    "features"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the pricing plan",
                                        "type": "string"
                                    },
                                    "monthly_cost": {
                                        "description": "Cost of the pricing plan per month",
                                        "type": "number"
                                    },
                                    "yearly_cost": {
                                        "description": "Cost of the pricing plan per year",
                                        "type": "number"
                                    },
                                    "currency": {
                                        "description": "Currency of the pricing plan",
                                        "type": "string"
                                    },
                                    "features": {
                                        "type": "array",
                                        "items": {
                                            "description": "Features of the pricing plan",
                                            "type": "string"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successfully updated pricing plan"
                    },
                    "404": {
                        "description": "Pricing plan not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Pricing Plans"
                ],
                "summary": "Delete a specific pricing plan",
                "operationId": "7dfe6a4743ef7c67cc1959aab4e6b5b4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Pricing plan not found"
                    },
                    "405": {
                        "description": "Invalid HTTP Method"
                    }
                }
            }
        },
        "/menu/products": {
            "get": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Get all products",
                "operationId": "4b76eaa6484e95cb277ad92c67d76d32",
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Restaurant not found for the user making the API call",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/menu/products/{id}": {
            "get": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Get product details from id",
                "operationId": "780ec7510d31e0117fb434334b33ef94",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Products retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Restaurant not found for the user making the API call",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Restaurant not found for the user making the API call"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Delete a product",
                "operationId": "48c3e47de2cc120405e91561a73bb499",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Product id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Product deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Product deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Product not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/menu/create": {
            "post": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Create a menu",
                "operationId": "d0e2634a59c04ddd4c1b9fe67d3d503d",
                "requestBody": {
                    "description": "Pass menu data",
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Category created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Category not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Category not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Server error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/menu/generate-digital": {
            "post": {
                "tags": [
                    "Menu Management"
                ],
                "summary": "Generate Digital Menu",
                "operationId": "e425a3d9321b86266a4bee380a706ce8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "categories": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "products": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Digital menu generated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Digital menu generated and saved successfully"
                                        },
                                        "menu": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "category": {
                                                        "type": "string"
                                                    },
                                                    "products": {
                                                        "type": "array",
                                                        "items": {
                                                            "properties": {
                                                                "id": {
                                                                    "type": "integer"
                                                                },
                                                                "name": {
                                                                    "type": "string"
                                                                },
                                                                "image": {
                                                                    "type": "string"
                                                                },
                                                                "price": {
                                                                    "type": "number"
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/promotions": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get list of promotions by Venue ID",
                "operationId": "c498e2473e5caed3c3e9bc80cee35dbb",
                "parameters": [
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue Short Code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Promotions retrieved successfully"
                                        },
                                        "data": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "put": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Update a promotion",
                "operationId": "17d9920ba09ccca5d5d332540e48b46c",
                "requestBody": {
                    "description": "Promotion status details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "discount_id": {
                                        "description": "Discount ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "Discount status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": "1"
                                    },
                                    "title": {
                                        "description": "Promotion title",
                                        "type": "string",
                                        "example": "Promotion title"
                                    },
                                    "Description": {
                                        "description": "Promotion Description",
                                        "type": "string",
                                        "example": "Promotion Description"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Store a new promotion",
                "operationId": "f6ee7b3432e32c51dd0996636ca36044",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "venue_short_code": {
                                        "description": "Venue short code",
                                        "type": "string"
                                    },
                                    "discount_id": {
                                        "description": "Discount ID",
                                        "type": "integer"
                                    },
                                    "title": {
                                        "description": "Title",
                                        "type": "string"
                                    },
                                    "description": {
                                        "description": "Description",
                                        "type": "string"
                                    },
                                    "type": {
                                        "description": "Type (discount/coupon)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Promotion added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "promotion": {
                                            "description": "Promotion details",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Venue not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/promotions/discounts": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Get all discounts for a venue",
                "operationId": "c8796b560ddba009a8467a5763ac96a8",
                "parameters": [
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue short code",
                        "required": true,
                        "example": "ABC123"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Discounts retrieved successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Venue not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Update a discount",
                "operationId": "4ef7f7a402ec4b1b603fc25bdf23fa22",
                "requestBody": {
                    "description": "Discount details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "id": {
                                        "description": "Discount ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "type": {
                                        "description": "Discount type",
                                        "type": "string",
                                        "enum": [
                                            "fixed",
                                            "percentage"
                                        ],
                                        "example": "fixed"
                                    },
                                    "reservation_count": {
                                        "description": "Minimum reservation count",
                                        "type": "integer",
                                        "example": "5"
                                    },
                                    "value": {
                                        "description": "Discount value",
                                        "type": "number",
                                        "example": "10.5"
                                    },
                                    "start_time": {
                                        "description": "Discount start time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-07-01 10:00:00"
                                    },
                                    "end_time": {
                                        "description": "Discount end time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-07-01 18:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Store a discount",
                "operationId": "271b656a9bdf6d89bdedca34245f2a6c",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "venue_short_code": {
                                        "description": "Venue short code",
                                        "type": "string",
                                        "example": "ABC123"
                                    },
                                    "reservation_count": {
                                        "description": "Reservation count",
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "type": {
                                        "description": "Discount type",
                                        "type": "string",
                                        "enum": [
                                            "fixed",
                                            "percentage"
                                        ]
                                    },
                                    "value": {
                                        "description": "Discount value",
                                        "type": "number",
                                        "example": 5.99
                                    },
                                    "start_time": {
                                        "description": "Discount start time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-07-02 10:00:00"
                                    },
                                    "end_time": {
                                        "description": "Discount end time",
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2023-07-02 18:00:00"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Discount added successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "404": {
                        "description": "Venue not found"
                    },
                    "500": {
                        "description": "Server error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promotions/active-discounts": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "List active discounts",
                "description": "Retrieves a list of active discounts for the authenticated user's restaurant.",
                "operationId": "347d94acc2b158de5ed4581f1c510f41",
                "parameters": [
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue short code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "discounts": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Venue not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promotions/{id}": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Show promotion details",
                "operationId": "139a5d47fc679b62f1ecc2775c06aca3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Promotion ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    },
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "description": "Venue short code",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promotions/discounts/{id}": {
            "get": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Show a discount",
                "operationId": "583de77830ac0c4042c03fc195cda2fb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Discount ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promotions/{id}/update-status": {
            "patch": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Update promotion status",
                "operationId": "27cffd12ee81d75dcd196b70fcc2b100",
                "requestBody": {
                    "description": "Promotion status details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "promotion_id": {
                                        "description": "Promotion ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "Promotion status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Promotion not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/promotions/discounts/{id}/update-status": {
            "patch": {
                "tags": [
                    "Promotions"
                ],
                "summary": "Update discount status",
                "operationId": "d08b880bb816303d5ed1f09d6613045c",
                "requestBody": {
                    "description": "Discount status details",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "discount_id": {
                                        "description": "Discount ID",
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "status": {
                                        "description": "Discount status",
                                        "type": "integer",
                                        "enum": [
                                            0,
                                            1
                                        ],
                                        "example": "1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    },
                    "404": {
                        "description": "Discount not found",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/reports/sales-by-product-report": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate the sales by product report",
                "description": "Generate the sales by product report.",
                "operationId": "37fe69efd1f45747ba8def82a7e2d5dd",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product": {
                                                        "description": "The product object",
                                                        "type": "object"
                                                    },
                                                    "total_sales": {
                                                        "description": "The total sales of the product",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports/inventory-turnover-report": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate the inventory turnover report",
                "description": "Generate the inventory turnover report.",
                "operationId": "928a713105991ba7b86609069ca1cbe4",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product": {
                                                        "description": "The product object",
                                                        "type": "object"
                                                    },
                                                    "inventory_value": {
                                                        "description": "The total value of the inventory for the product",
                                                        "type": "decimal",
                                                        "format": "float"
                                                    },
                                                    "turnover_rate": {
                                                        "description": "The turnover rate of the inventory for the product",
                                                        "type": "decimal",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports/stock-aging-report": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate the stock aging report",
                "description": "Generate the stock aging report.",
                "operationId": "3616f066946138b45783cd411bafca19",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product": {
                                                        "description": "The product object",
                                                        "type": "object"
                                                    },
                                                    "quantity": {
                                                        "description": "The quantity of the product in stock",
                                                        "type": "integer"
                                                    },
                                                    "days_in_stock": {
                                                        "description": "The number of days the product has been in stock",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports/reorder-point-report": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate the reorder point report",
                "description": "Generate the reorder point report.",
                "operationId": "55e954b4805723592e0182665814cead",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product": {
                                                        "description": "The product object",
                                                        "type": "object"
                                                    },
                                                    "current_quantity": {
                                                        "description": "The current quantity of the product in inventory",
                                                        "type": "integer"
                                                    },
                                                    "reorder_point": {
                                                        "description": "The reorder point of the product",
                                                        "type": "integer"
                                                    },
                                                    "needs_reorder": {
                                                        "description": "Indicates if the product needs to be reordered",
                                                        "type": "boolean"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports/cost-of-goods-sold": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate the cost of goods sold report",
                "description": "Generate the cost of goods sold report.",
                "operationId": "610d6a83222744d90a845595b950085e",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "product": {
                                                        "description": "The name of the product",
                                                        "type": "string"
                                                    },
                                                    "quantity_sold": {
                                                        "description": "The total quantity of the product sold",
                                                        "type": "integer"
                                                    },
                                                    "total_cost": {
                                                        "description": "The total cost of the product sold",
                                                        "type": "number",
                                                        "format": "float"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/reports/waitlist": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "Generate a report on waitlisted guests",
                "operationId": "336ec66a20486aa04c54f5d1a80fe854",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "total_waitlisted": {
                                            "type": "integer"
                                        },
                                        "total_seated": {
                                            "type": "integer"
                                        },
                                        "total_left": {
                                            "type": "integer"
                                        },
                                        "average_wait_time": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/reports/table-metrics": {
            "get": {
                "tags": [
                    "Reports"
                ],
                "summary": "View metrics and trends related to table management",
                "operationId": "f2165e81f1c91c84b43d597ab40839e7",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found"
                    }
                },
                "security": [
                    {
                        "api_key": []
                    }
                ]
            }
        },
        "/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "List all reservations",
                "operationId": "82758c001f33de2ebe824f593ff49707",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "table_id": {
                                                        "type": "integer"
                                                    },
                                                    "table": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "location": {
                                                                "type": "string"
                                                            },
                                                            "seats": {
                                                                "type": "integer"
                                                            },
                                                            "shape": {
                                                                "type": "string"
                                                            }
                                                        },
                                                        "type": "object"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "seating_arrangement": {
                                                        "type": "string"
                                                    },
                                                    "guest_count": {
                                                        "type": "integer"
                                                    },
                                                    "notes": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "6a47c7ea0661a8d2cde3589fc9ac42ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "type": "integer"
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "datetime"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "datetime"
                                    },
                                    "seating_arrangement": {
                                        "type": "string",
                                        "example": "round"
                                    },
                                    "guest_count": {
                                        "type": "integer"
                                    },
                                    "notes": {
                                        "type": "string"
                                    },
                                    "hasAdditionalGuests": {
                                        "type": "boolean"
                                    },
                                    "provideGuestInfo": {
                                        "type": "boolean"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Reservation created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer"
                                                },
                                                "table_id": {
                                                    "type": "integer"
                                                },
                                                "start_time": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "end_time": {
                                                    "type": "string",
                                                    "format": "datetime"
                                                },
                                                "seating_arrangement": {
                                                    "type": "string"
                                                },
                                                "guest_count": {
                                                    "type": "integer"
                                                },
                                                "notes": {
                                                    "type": "string"
                                                },
                                                "guests": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            },
                                                            "address": {
                                                                "type": "string"
                                                            },
                                                            "phone": {
                                                                "type": "string"
                                                            },
                                                            "is_main": {
                                                                "description": "Indicates whether this guest is the primary guest for the reservation.",
                                                                "type": "boolean"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Get reservation details",
                "operationId": "389cb96f4ef0d41ac2925630cf5bc36a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Reservation not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/reservations/{id}/confirm/": {
            "patch": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Confirm or cancel a reservation",
                "operationId": "b257cdf3694ebb8bd44a729c3dd0944e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation to be confirmed or canceled",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "confirmed"
                                ],
                                "properties": {
                                    "confirmed": {
                                        "description": "The status of the reservation (confirmed or canceled)",
                                        "type": "integer",
                                        "enum": [
                                            1,
                                            2
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "The reservation has been successfully confirmed or canceled"
                    },
                    "404": {
                        "description": "The reservation could not be found"
                    },
                    "422": {
                        "description": "The confirmed value provided is not valid"
                    }
                }
            }
        },
        "/reservations/{id}/choose-table": {
            "patch": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Choose table for reservation",
                "operationId": "e27c6826deb917a23f6646d8d0e854ea",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the reservation that we want to choose a table for",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "description": "ID of the table",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Reservation or table not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/filter": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Filter reservations by various criteria",
                "description": "Filter reservations by start date, guest ID, table ID, guest count, confirmed status, insertion type, and source",
                "operationId": "7d335063098a18904ae42875c16c22a9",
                "parameters": [
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date in the format of Y-m-d",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2023-04-21"
                        }
                    },
                    {
                        "name": "guest_id",
                        "in": "query",
                        "description": "Guest ID to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1234
                        }
                    },
                    {
                        "name": "table_id",
                        "in": "query",
                        "description": "Table ID to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "guest_count_min",
                        "in": "query",
                        "description": "Minimum guest count to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 2
                        }
                    },
                    {
                        "name": "guest_count_max",
                        "in": "query",
                        "description": "Maximum guest count to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 4
                        }
                    },
                    {
                        "name": "confirmed",
                        "in": "query",
                        "description": "Confirmation status of the reservation (1 for confirmed, 2 for cancelled)",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "insertion_type",
                        "in": "query",
                        "description": "Insertion type to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "app"
                        }
                    },
                    {
                        "name": "source",
                        "in": "query",
                        "description": "Source to filter reservations by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "web"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": [
                                        {
                                            "type": "integer",
                                            "property": "id"
                                        },
                                        {
                                            "type": "integer",
                                            "property": "table_id"
                                        },
                                        {
                                            "type": "string",
                                            "format": "date-time",
                                            "property": "start_time"
                                        },
                                        {
                                            "type": "string",
                                            "format": "date-time",
                                            "property": "end_time"
                                        },
                                        {
                                            "type": "string",
                                            "property": "seating_arrangement"
                                        },
                                        {
                                            "type": "integer",
                                            "property": "guest_count"
                                        },
                                        {
                                            "type": "string",
                                            "property": "notes"
                                        },
                                        {
                                            "type": "integer",
                                            "property": "confirmed"
                                        },
                                        {
                                            "type": "string",
                                            "format": "date-time",
                                            "property": "created_at"
                                        },
                                        {
                                            "type": "string",
                                            "format": "date-time",
                                            "property": "updated_at"
                                        }
                                    ]
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object",
                                            "example": {
                                                "start_date": [
                                                    "The start date field is required."
                                                ]
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/availability": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "List available timeslots for a table",
                "operationId": "2ce20cd510ffbf1ab8ecf9be15f66560",
                "parameters": [
                    {
                        "name": "table_id",
                        "in": "query",
                        "description": "ID of the table",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "date",
                        "in": "query",
                        "description": "Date in the format YYYY-MM-DD",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of available timeslots",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "available_timeslots": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "start_time": {
                                                        "description": "Start time of the available timeslot in the format YYYY-MM-DD HH:MM:SS",
                                                        "type": "string"
                                                    },
                                                    "end_time": {
                                                        "description": "End time of the available timeslot in the format YYYY-MM-DD HH:MM:SS",
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "object",
                                            "additionalProperties": {
                                                "type": "string"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Table not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/update-restaurant": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Update restaurant profile",
                "operationId": "ba061ec6c0899719cc2cff62b3722ed9",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_name": {
                                        "description": "Updated name of the restaurant",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "restaurant_email": {
                                        "description": "Updated email of the restaurant",
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Updated phone number of the restaurant",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cuisine_types": {
                                        "description": "Updated array of cuisine type IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "pricing": {
                                        "description": "Updated pricing information",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "logo_image": {
                                        "description": "Updated base64-encoded logo image",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cover_image": {
                                        "description": "Updated base64-encoded cover image",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "amenities": {
                                        "description": "Updated array of amenity IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "address_line1": {
                                        "description": "Updated address line 1",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address_line2": {
                                        "description": "Updated address line 2",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "state": {
                                        "description": "Updated state",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "Updated city",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "postcode": {
                                        "description": "Updated postcode",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restaurant profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "restaurant": {
                                            "properties": {
                                                "id": {
                                                    "description": "Restaurant ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/resend-verify-email": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Resend verification email",
                "operationId": "db70efe3f9c73a2ed70f5152a377b2ea",
                "requestBody": {
                    "description": "Restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/verify-email": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Verify email",
                "operationId": "b1eae883731ced0c795bfd0d042bdcbb",
                "requestBody": {
                    "description": "Verification token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Verification token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "contact_token": {
                                            "description": "Contact token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Restaurant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/payment-methods": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Get payment methods",
                "operationId": "c055508260aa057b488054ac028cd819",
                "requestBody": {
                    "description": "Restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment methods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_methods": {
                                            "description": "List of payment methods",
                                            "type": "array",
                                            "items": {
                                                "description": "Payment method object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Payment method ID",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Payment method type",
                                                        "type": "string"
                                                    },
                                                    "card": {
                                                        "description": "Card details",
                                                        "properties": {
                                                            "brand": {
                                                                "description": "Card brand",
                                                                "type": "string"
                                                            },
                                                            "last4": {
                                                                "description": "Last 4 digits of the card",
                                                                "type": "string"
                                                            },
                                                            "exp_month": {
                                                                "description": "Expiration month of the card",
                                                                "type": "integer"
                                                            },
                                                            "exp_year": {
                                                                "description": "Expiration year of the card",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/add-card": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Add card as payment method",
                "operationId": "bdda7ba9cd976f11f5a203aac23dc3ad",
                "requestBody": {
                    "description": "Card details and restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "Cardholder name",
                                        "type": "string"
                                    },
                                    "number": {
                                        "description": "Card number",
                                        "type": "string"
                                    },
                                    "exp_month": {
                                        "description": "Expiration month",
                                        "type": "string"
                                    },
                                    "exp_year": {
                                        "description": "Expiration year",
                                        "type": "string"
                                    },
                                    "cvc": {
                                        "description": "Card verification code (CVC)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_method": {
                                            "description": "Payment method object",
                                            "properties": {
                                                "id": {
                                                    "description": "Payment method ID",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Payment method type",
                                                    "type": "string"
                                                },
                                                "card": {
                                                    "description": "Card details",
                                                    "properties": {
                                                        "brand": {
                                                            "description": "Card brand",
                                                            "type": "string"
                                                        },
                                                        "last4": {
                                                            "description": "Last 4 digits of the card",
                                                            "type": "string"
                                                        },
                                                        "exp_month": {
                                                            "description": "Expiration month of the card",
                                                            "type": "integer"
                                                        },
                                                        "exp_year": {
                                                            "description": "Expiration year of the card",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/pay-with-card": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Pay with card",
                "operationId": "40602a2d3b0f1199781d8aa4e7635d0a",
                "requestBody": {
                    "description": "Payment details and restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    },
                                    "payment_method_id": {
                                        "description": "Payment method ID",
                                        "type": "string"
                                    },
                                    "plan_id": {
                                        "description": "Plan ID",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "Payment mode ('monthly' or 'yearly')",
                                        "type": "string"
                                    },
                                    "addons": {
                                        "description": "List of addon IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messgae": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/change-subscribe": {
            "post": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Change subscription",
                "operationId": "20bc2c0bdacc823da8f8589f04a15665",
                "requestBody": {
                    "description": "Subscription details and restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "type": {
                                        "description": "Change type ('cancel', 'downgrade', 'upgrade', 'reinstate')",
                                        "type": "string"
                                    },
                                    "plan_id": {
                                        "description": "New plan ID",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "Payment mode ('monthly' or 'yearly')",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Subscription updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "messgae": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/register-config": {
            "get": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Get vendor registration configuration",
                "operationId": "d74ea1f6151ba306c2f85627a93edabf",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cuisine_types": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "American"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "amenities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Wifi"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "states": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Alabama"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "cities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Abbeville"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/accounts/payment-config": {
            "get": {
                "tags": [
                    "RestaurantConfiguration"
                ],
                "summary": "Get payment configuration",
                "description": "Get the payment configuration including pricing plans and addons",
                "operationId": "4e5fd6c2fd22043c0d045387e5ca8ce9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pricing_plans": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "addons": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurants/register": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Create a new restaurant",
                "operationId": "51944d17970644d58dfd12258abd305b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First name of the restaurant owner",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name of the restaurant owner",
                                        "type": "string"
                                    },
                                    "email": {
                                        "description": "Email of the restaurant owner",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "password": {
                                        "description": "Password for the restaurant owner",
                                        "type": "string"
                                    },
                                    "restaurant_name": {
                                        "description": "Name of the restaurant",
                                        "type": "string"
                                    },
                                    "restaurant_email": {
                                        "description": "Email of the restaurant",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "phone": {
                                        "description": "Phone number of the restaurant",
                                        "type": "string"
                                    },
                                    "cuisine_types": {
                                        "description": "Array of cuisine type IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "pricing": {
                                        "description": "Pricing information",
                                        "type": "string"
                                    },
                                    "logo_image": {
                                        "description": "Base64-encoded logo image",
                                        "type": "string"
                                    },
                                    "cover_image": {
                                        "description": "Base64-encoded cover image",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "amenities": {
                                        "description": "Array of amenity IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "address_line1": {
                                        "description": "Address line 1",
                                        "type": "string"
                                    },
                                    "address_line2": {
                                        "description": "Address line 2",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "state": {
                                        "description": "State",
                                        "type": "string"
                                    },
                                    "city": {
                                        "description": "City",
                                        "type": "string"
                                    },
                                    "postcode": {
                                        "description": "Postcode",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restaurant created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "restaurant": {
                                            "properties": {
                                                "id": {
                                                    "description": "Restaurant ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/update-restaurant": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Update restaurant profile",
                "operationId": "2b68e0bddc0de6cf536532192c7231b2",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_name": {
                                        "description": "Updated name of the restaurant",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "restaurant_email": {
                                        "description": "Updated email of the restaurant",
                                        "type": "string",
                                        "format": "email",
                                        "nullable": true
                                    },
                                    "phone": {
                                        "description": "Updated phone number of the restaurant",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cuisine_types": {
                                        "description": "Updated array of cuisine type IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "pricing": {
                                        "description": "Updated pricing information",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "logo_image": {
                                        "description": "Updated base64-encoded logo image",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "cover_image": {
                                        "description": "Updated base64-encoded cover image",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "amenities": {
                                        "description": "Updated array of amenity IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "nullable": true
                                    },
                                    "address_line1": {
                                        "description": "Updated address line 1",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "address_line2": {
                                        "description": "Updated address line 2",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "state": {
                                        "description": "Updated state",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "city": {
                                        "description": "Updated city",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "postcode": {
                                        "description": "Updated postcode",
                                        "type": "string",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Restaurant profile updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "restaurant": {
                                            "properties": {
                                                "id": {
                                                    "description": "Restaurant ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/resend-verify-email": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Resend verification email",
                "operationId": "df964798fdfced6f556bc40ce4d036f6",
                "requestBody": {
                    "description": "Restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/verify-email": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Verify email",
                "operationId": "ab77c785d30a9642b0aab3a6082dec44",
                "requestBody": {
                    "description": "Verification token",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Verification token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Email verified successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "contact_token": {
                                            "description": "Contact token",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Restaurant not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/payment-methods": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Get payment methods",
                "operationId": "4b9668c3fc596b3b933672df00670c71",
                "requestBody": {
                    "description": "Restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment methods retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_methods": {
                                            "description": "List of payment methods",
                                            "type": "array",
                                            "items": {
                                                "description": "Payment method object",
                                                "properties": {
                                                    "id": {
                                                        "description": "Payment method ID",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "description": "Payment method type",
                                                        "type": "string"
                                                    },
                                                    "card": {
                                                        "description": "Card details",
                                                        "properties": {
                                                            "brand": {
                                                                "description": "Card brand",
                                                                "type": "string"
                                                            },
                                                            "last4": {
                                                                "description": "Last 4 digits of the card",
                                                                "type": "string"
                                                            },
                                                            "exp_month": {
                                                                "description": "Expiration month of the card",
                                                                "type": "integer"
                                                            },
                                                            "exp_year": {
                                                                "description": "Expiration year of the card",
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/add-card": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Add card as payment method",
                "operationId": "a63f7d7e6c923bad01a9de912a4dbbc5",
                "requestBody": {
                    "description": "Card details and restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "Cardholder name",
                                        "type": "string"
                                    },
                                    "number": {
                                        "description": "Card number",
                                        "type": "string"
                                    },
                                    "exp_month": {
                                        "description": "Expiration month",
                                        "type": "string"
                                    },
                                    "exp_year": {
                                        "description": "Expiration year",
                                        "type": "string"
                                    },
                                    "cvc": {
                                        "description": "Card verification code (CVC)",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Card added successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "payment_method": {
                                            "description": "Payment method object",
                                            "properties": {
                                                "id": {
                                                    "description": "Payment method ID",
                                                    "type": "string"
                                                },
                                                "type": {
                                                    "description": "Payment method type",
                                                    "type": "string"
                                                },
                                                "card": {
                                                    "description": "Card details",
                                                    "properties": {
                                                        "brand": {
                                                            "description": "Card brand",
                                                            "type": "string"
                                                        },
                                                        "last4": {
                                                            "description": "Last 4 digits of the card",
                                                            "type": "string"
                                                        },
                                                        "exp_month": {
                                                            "description": "Expiration month of the card",
                                                            "type": "integer"
                                                        },
                                                        "exp_year": {
                                                            "description": "Expiration year of the card",
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/pay-with-card": {
            "post": {
                "tags": [
                    "RestaurantPreOnboarding"
                ],
                "summary": "Pay with card",
                "operationId": "6e3d93856f8e799673a2451940d51406",
                "requestBody": {
                    "description": "Payment details and restaurant ID",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "description": "Restaurant ID",
                                        "type": "integer"
                                    },
                                    "payment_method_id": {
                                        "description": "Payment method ID",
                                        "type": "string"
                                    },
                                    "plan_id": {
                                        "description": "Plan ID",
                                        "type": "integer"
                                    },
                                    "mode": {
                                        "description": "Payment mode ('monthly' or 'yearly')",
                                        "type": "string"
                                    },
                                    "addons": {
                                        "description": "List of addon IDs",
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/staff/roles": {
            "get": {
                "tags": [
                    "Staff Management"
                ],
                "summary": "List roles and their permissions",
                "description": "Returns a list of all roles and their permissions",
                "operationId": "listRoles",
                "responses": {
                    "200": {
                        "description": "successful operation"
                    },
                    "401": {
                        "description": "unauthorized"
                    },
                    "500": {
                        "description": "internal server error"
                    }
                }
            }
        },
        "/sn-platform-connect/reservations": {
            "post": {
                "tags": [
                    "SNReservations"
                ],
                "summary": "Create a new reservation",
                "operationId": "createSNReservation",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "restaurant_id": {
                                        "type": "integer"
                                    },
                                    "customer_id": {
                                        "type": "integer"
                                    },
                                    "reserve_date": {
                                        "type": "string"
                                    },
                                    "nr_of_guests": {
                                        "type": "integer"
                                    },
                                    "notes": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/tables/seating-arrangements": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "List all seating arrangements of the restaurant",
                "operationId": "e3b8ce66237fcb5022fcda92bd6ca92d",
                "responses": {
                    "200": {
                        "description": "List of seating arrangements"
                    }
                }
            },
            "put": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Update an existing seating arrangement",
                "operationId": "a602b0418a1b62c12a505eb057b8d8de",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the seating arrangement to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "guest_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T12:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T14:00:00Z"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Special requests or notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Seating arrangement updated successfully"
                    },
                    "404": {
                        "description": "Seating arrangement not found"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Create a new seating arrangement",
                "operationId": "ba7da109d663fcfdf7ce966f3df61f0f",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "table_id",
                                    "guest_ids",
                                    "start_time",
                                    "end_time"
                                ],
                                "properties": {
                                    "table_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "guest_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        },
                                        "example": [
                                            1,
                                            2,
                                            3
                                        ]
                                    },
                                    "start_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T12:00:00Z"
                                    },
                                    "end_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T14:00:00Z"
                                    },
                                    "notes": {
                                        "type": "string",
                                        "example": "Special requests or notes"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Seating arrangement created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/seating-arrangements/{id}": {
            "delete": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Delete an existing seating arrangement",
                "operationId": "728408479f925f77f91e8a3ce87ec2e4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the seating arrangement to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Seating arrangement deleted successfully"
                    },
                    "404": {
                        "description": "Seating arrangement not found"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/tables": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "List all tables",
                "operationId": "b10136e178aa01c8b5822949dcb94bb3",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "seats": {
                                                        "type": "integer"
                                                    },
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "shape": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tables retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            },
            "post": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Add a new table",
                "description": "Add a new table to the restaurant",
                "operationId": "addTable",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Table 1"
                                    },
                                    "seats": {
                                        "type": "integer",
                                        "example": 4
                                    },
                                    "shape": {
                                        "type": "string",
                                        "example": "square"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "inside"
                                    },
                                    "number": {
                                        "type": "string",
                                        "example": "001"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Table created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tables/shapes": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "List all tables shapes",
                "operationId": "85fe66122de8cd3a2da8a8ae21b022ec",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "enum": {
                                                        "type": "string"
                                                    },
                                                    "shape": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Tables retrieved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tables/move": {
            "put": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Move a table to a new location",
                "operationId": "18fe52ac3024b9ef9817d3aa07a459ad",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "new_location": {
                                        "type": "string",
                                        "example": "Room 1"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Table moved successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tables/merge": {
            "patch": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Merge multiple tables into a single table",
                "operationId": "38e789f8ed10322045d9060ec2ccc57c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_numbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "new_table_number": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Tables merged successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tables/split": {
            "put": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Split a table",
                "operationId": "ec31adf134433dbab6b9ef083c692213",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "type": "integer"
                                    },
                                    "new_table_numbers": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    },
                                    "new_table_seats": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Table split successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tables/assign-guests": {
            "post": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Assign guests to a table",
                "operationId": "f4b795cacc2d0ee13fafabd15304a47d",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "table_id": {
                                        "type": "integer"
                                    },
                                    "guest_ids": {
                                        "type": "array",
                                        "items": {
                                            "type": "integer"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Guests assigned to table successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input"
                    },
                    "404": {
                        "description": "Table not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/tables/dining-space-locations": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Get all dining space locations of the restaurant",
                "description": "Get all dining space locations of the restaurant",
                "operationId": "getDiningSpaceLocations",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": 1
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Inside"
                                        },
                                        "description": {
                                            "type": "string",
                                            "example": "Inside the restaurant"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Create a new dining space location for the restaurant",
                "operationId": "6c0e3ee7ad144735146cb8a925ef153f",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Main Dining Room"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "This is the main dining area of the restaurant"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Dining space location created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Dining space location created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Unprocessable Entity"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/tables/details/{id}": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Get details of a specific table and its associated reservations and seating arrangements",
                "operationId": "0075baed8602e4b68510c32d76a139a4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the table to retrieve",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "number": {
                                            "type": "string",
                                            "example": "001"
                                        },
                                        "name": {
                                            "type": "string",
                                            "example": "Table 1"
                                        },
                                        "restaurant_id": {
                                            "type": "integer",
                                            "example": "1"
                                        },
                                        "size": {
                                            "type": "string",
                                            "example": "small"
                                        },
                                        "seats": {
                                            "type": "integer",
                                            "example": "4"
                                        },
                                        "location": {
                                            "type": "string",
                                            "example": "Outdoor patio"
                                        },
                                        "shape": {
                                            "type": "string",
                                            "example": "round"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "example": "April 25, 2023 at 12:52:56"
                                        },
                                        "updated_at": {
                                            "type": "string",
                                            "example": "April 25, 2023 at 12:53:11"
                                        },
                                        "reservations": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "guest_id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "table_id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "start_time": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 13:00:00"
                                                    },
                                                    "end_time": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 14:30:00"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 12:54:11"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 12:54:11"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "seating_arrangements": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": "1"
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Window seat"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "Seat next to the window with a view"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 12:55:11"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "example": "April 25, 2023 at 12:55:\n        *                     11"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/tables/available": {
            "get": {
                "tags": [
                    "Table Management"
                ],
                "summary": "Get all available tables",
                "description": "Returns a list of all tables that are available for reservation during the specified time period",
                "operationId": "getAvailableTables",
                "parameters": [
                    {
                        "name": "start_time",
                        "in": "query",
                        "description": "The start time of the reservation in format Y-m-d H:i:s",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "end_time",
                        "in": "query",
                        "description": "The end time of the reservation in format Y-m-d H:i:s",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "description": "The ID of the table",
                                                "type": "integer"
                                            },
                                            "number": {
                                                "description": "The number of the table",
                                                "type": "string"
                                            },
                                            "name": {
                                                "description": "The name of the table",
                                                "type": "string"
                                            },
                                            "size": {
                                                "description": "The size of the table",
                                                "type": "string"
                                            },
                                            "seats": {
                                                "description": "The number of seats at the table",
                                                "type": "integer"
                                            },
                                            "location": {
                                                "description": "The location of the table",
                                                "type": "string"
                                            },
                                            "shape": {
                                                "description": "The shape of the table",
                                                "type": "string"
                                            },
                                            "added_at": {
                                                "description": "The date and time when the table was added",
                                                "type": "string"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "description": "The error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Unprocessable entity",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "description": "The validation errors",
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "The error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/third-party-integrations/doordash/add-integration": {
            "post": {
                "tags": [
                    "DoorDashDriveIntegration"
                ],
                "summary": "Integrate VenueBoost Restaurant with DoorDash Drive",
                "operationId": "addDoorDashDriveIntegration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "developer_id": {
                                        "type": "string"
                                    },
                                    "key_id": {
                                        "type": "string"
                                    },
                                    "signing_secret": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/third-party-integrations/doordash/delete-integration/{id}": {
            "delete": {
                "tags": [
                    "DoorDashDriveIntegration"
                ],
                "summary": "Disconnect VenueBoost Restaurant Integration DoorDash Drive",
                "operationId": "disconnectDoorDashIntegration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Integration ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Integration disconnected successfully"
                    },
                    "404": {
                        "description": "Integration not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/third-party-integrations/doordash/create-delivery-request": {
            "post": {
                "tags": [
                    "DoorDashDriveIntegration"
                ],
                "summary": "Create a delivery request",
                "operationId": "1da1a84fc8288942ac21d1efdebfe9b8",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/third-party-integrations/doordash/get-delivery-update": {
            "post": {
                "tags": [
                    "DoorDashDriveIntegration"
                ],
                "summary": "Get delivery update",
                "operationId": "5e960c30c31d96a0853ab53b8f62f76e",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/third-party-integrations/doordash/cancel-delivery-request": {
            "post": {
                "tags": [
                    "DoorDashDriveIntegration"
                ],
                "summary": "Cancel delivery request",
                "operationId": "097352bac4dab96ec25817c9af24ca7e",
                "requestBody": {
                    "required": true
                },
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "400": {
                        "description": "Bad request"
                    }
                }
            }
        },
        "/third-party-integrations/ubereats/add-integration": {
            "post": {
                "tags": [
                    "UberEatsIntegration"
                ],
                "summary": "Integrate VenueBoost Restaurant with Ubereats Restaurant",
                "operationId": "addUberEatsIntegration",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "customer_id": {
                                        "type": "string"
                                    },
                                    "client_id": {
                                        "type": "string"
                                    },
                                    "client_secret": {
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "400": {
                        "description": "Bad Request"
                    }
                }
            }
        },
        "/third-party-integrations/ubereats/delete-integration/{id}": {
            "delete": {
                "tags": [
                    "UberEatsIntegration"
                ],
                "summary": "Disconnect VenueBoost Restaurant Integration Ubereats Restaurant",
                "operationId": "disconnectUberEatsIntegration",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Integration ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Integration disconnected successfully"
                    },
                    "404": {
                        "description": "Integration not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurants/register-config": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get vendor registration configuration",
                "operationId": "bd128c79382829d1571648568f957a88",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "properties": {
                                                "cuisine_types": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "American"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "amenities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Wifi"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "states": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Alabama"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "cities": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "Abbeville"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/restaurants/payment-config": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get payment configuration",
                "description": "Get the payment configuration including pricing plans and addons",
                "operationId": "8bd920ba930cad8a785bc67d5c113b39",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pricing_plans": {
                                            "type": "array",
                                            "items": {}
                                        },
                                        "addons": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/cuisinetypes": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get all cuisine types",
                "description": "Retrieve a list of all cuisine types",
                "operationId": "e6980b3f843642c11fa070f9393a2fb0",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cuisine_types": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Create or update a cuisine type",
                "description": "Create a new cuisine type or update an existing one",
                "operationId": "b0bda523077855090aa229d079cd139c",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string"
                                    },
                                    "id": {
                                        "type": "integer",
                                        "format": "int64"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "cuisine_type": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/cuisinetypes/{id}": {
            "delete": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Delete a cuisine type",
                "description": "Delete a cuisine type by its ID",
                "operationId": "71556d20c7c02025f06cb565e6360e2a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the cuisine type to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Cuisine type not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/amenities": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get all amenities",
                "description": "Retrieve a list of all amenities",
                "operationId": "586bdaa2d895e2f2dd856d76e380cbc5",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amenities": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Create or update an amenity",
                "description": "Create a new amenity or update an existing amenity",
                "operationId": "9724883b14e5cdd07e14207a6d95712b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name"
                                ],
                                "properties": {
                                    "id": {
                                        "description": "ID of the amenity (optional)",
                                        "type": "integer"
                                    },
                                    "name": {
                                        "description": "Name of the amenity",
                                        "type": "string"
                                    }
                                },
                                "type": "object",
                                "example": {
                                    "name": "WiFi"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "amenity": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/amenities/{id}": {
            "delete": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Delete an amenity",
                "description": "Delete an amenity by ID",
                "operationId": "a8beeb2a22d25f86def629489ae0e435",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the amenity",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/addons": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get all addons",
                "description": "Retrieve a list of all addons",
                "operationId": "3c64198eaf63a560dd5f8d5a78835deb",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "addons": {
                                            "type": "array",
                                            "items": {}
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            },
            "post": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Create or update an addon",
                "description": "Create a new addon or update an existing addon",
                "operationId": "3b43d1972e72d6cfa5f6cde4eef8c40a",
                "requestBody": {
                    "description": "Addons data",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "price"
                                ],
                                "properties": {
                                    "name": {
                                        "description": "Name of the addon",
                                        "type": "string"
                                    },
                                    "price": {
                                        "description": "Price of the addon",
                                        "type": "number",
                                        "format": "float"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "addon": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/addons/{id}": {
            "delete": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Delete an addon",
                "description": "Delete an existing addon by its ID",
                "operationId": "eb50ace33d12483abbb787d0a6c99d05",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the addon to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Addon not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/pricing-plans": {
            "get": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Get all pricing plans",
                "description": "Retrieve a list of all pricing plans",
                "operationId": "39ab7f2a565dee9ac77fd4e70b735013",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pricing_plans": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "restaurant-config/pricing-plans": {
            "post": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Create or update a pricing plan",
                "description": "Create a new pricing plan or update an existing one",
                "operationId": "4671f18ffc8c4cabe0e873660224ff46",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "[]"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "pricing_plan": {}
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/restaurant-config/pricing-plans/{id}": {
            "delete": {
                "tags": [
                    "SuperadminVendorConfiguration"
                ],
                "summary": "Delete a pricing plan",
                "description": "Delete a pricing plan by its ID",
                "operationId": "019ac9462bd1e623c241d1701854292a",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the pricing plan",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Pricing plan not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/vendor-contact-applications": {
            "get": {
                "tags": [
                    "VendorContactApplications"
                ],
                "summary": "Get vendor contact applications",
                "operationId": "f1efd4069aa852f8c733b0a2940bfb57",
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search keyword",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contacts retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "contact_sales": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "description": "Contact ID",
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "VendorContactApplications"
                ],
                "summary": "Create a new vendor contact application",
                "operationId": "28b372b9c3faa4edc8a459a877ebe23a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "first_name": {
                                        "description": "First name",
                                        "type": "string"
                                    },
                                    "last_name": {
                                        "description": "Last name",
                                        "type": "string"
                                    },
                                    "mobile": {
                                        "description": "Mobile number",
                                        "type": "string",
                                        "nullable": true
                                    },
                                    "email": {
                                        "description": "Email",
                                        "type": "string",
                                        "format": "email"
                                    },
                                    "restaurant_name": {
                                        "description": "Restaurant name",
                                        "type": "string"
                                    },
                                    "restaurant_city": {
                                        "description": "Restaurant city",
                                        "type": "string"
                                    },
                                    "restaurant_state": {
                                        "description": "Restaurant state",
                                        "type": "string"
                                    },
                                    "restaurant_zipcode": {
                                        "description": "Restaurant zipcode",
                                        "type": "string"
                                    },
                                    "restaurant_country": {
                                        "description": "Restaurant country",
                                        "type": "string"
                                    },
                                    "contact_reason": {
                                        "description": "Contact reason",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor-contact-applications/{id}": {
            "get": {
                "tags": [
                    "VendorContactApplications"
                ],
                "summary": "Get a single vendor contact application",
                "operationId": "e266c1acfd26a28b4fe07464b321bee3",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Contact ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contact retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "contact_sale": {
                                            "properties": {
                                                "id": {
                                                    "description": "Contact ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Not found message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "VendorContactApplications"
                ],
                "summary": "Update a vendor contact application",
                "operationId": "35c8087562b3f785e2e197865baad140",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the contact",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "status": {
                                        "description": "Status of the contact",
                                        "type": "string",
                                        "enum": [
                                            "approved",
                                            "declined"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Contact updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Contact not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/vendor-contact-applications/verify-register-link": {
            "post": {
                "tags": [
                    "VendorContactApplications"
                ],
                "summary": "Verify registration link",
                "operationId": "b875b7683a7a1b0b56edc637efd3fcbb",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "token": {
                                        "description": "Registration token",
                                        "type": "string"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Registration link is valid",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Success message",
                                            "type": "string"
                                        },
                                        "contact_sale": {
                                            "description": "Contact sale data",
                                            "properties": {
                                                "id": {
                                                    "description": "Contact sale ID",
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Validation error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Invalid registration link",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "description": "Error message",
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/waitlists": {
            "get": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Get all waitlist entries",
                "operationId": "eb981f3b5d46da3e1f73411bfeff2c62",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "id": {
                                                "type": "integer",
                                                "example": 1
                                            },
                                            "name": {
                                                "type": "string",
                                                "example": "John Doe"
                                            },
                                            "phone_number": {
                                                "type": "string",
                                                "example": "555-555-5555"
                                            },
                                            "email": {
                                                "type": "string",
                                                "example": "johndoe@example.com"
                                            },
                                            "party_size": {
                                                "type": "integer",
                                                "example": 4
                                            },
                                            "waitlist_time": {
                                                "type": "string",
                                                "format": "date-time",
                                                "example": "2022-01-01T00:00:00Z"
                                            },
                                            "reservation_id": {
                                                "type": "integer",
                                                "example": 1
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Waitlist entries not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Update an existing waitlist",
                "operationId": "a932d0097aaf530951a3b45d6ecda160",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the waitlist to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "arrival_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T12:00:00Z"
                                    },
                                    "seat_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T14:00:00Z"
                                    },
                                    "left_time": {
                                        "type": "string",
                                        "format": "date-time",
                                        "example": "2022-01-01T14:00:00Z"
                                    },
                                    "is_vip": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "is_regular": {
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Waitlist updated successfully"
                    },
                    "404": {
                        "description": "Waitlist not found"
                    },
                    "400": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/waitlists/prioritize": {
            "get": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Prioritize guests on the waitlist",
                "operationId": "2c4c5600897120a8ad5f6efeb1d956d9",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "name": {
                                                "type": "string"
                                            },
                                            "party_size": {
                                                "type": "integer"
                                            },
                                            "estimated_wait_time": {
                                                "type": "integer"
                                            },
                                            "is_vip": {
                                                "type": "boolean"
                                            },
                                            "is_regular": {
                                                "type": "boolean"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Waitlist guests not found"
                    }
                }
            }
        },
        "/waitlists/update-wait-time/{id}": {
            "put": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Update wait time for a specific guest on the waitlist",
                "operationId": "e17cf62fe7f44af8f94d54ced723c0eb",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the guest on the waitlist",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "estimated_wait_time": {
                                        "type": "integer"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Wait time updated successfully."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Guest not found on the waitlist"
                    }
                }
            }
        },
        "/waitlist/guests/{id}/history": {
            "get": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Get guests waitlist history",
                "description": "Returns the waitlist history for a specific guest, including the number of times they have been waitlisted, how long they have waited, and how many times they have been seated.",
                "operationId": "guestsHistory",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Guest ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "guest": {
                                            "properties": {
                                                "name": {
                                                    "type": "string"
                                                },
                                                "email": {
                                                    "type": "string"
                                                },
                                                "phone": {
                                                    "type": "string"
                                                },
                                                "address": {
                                                    "type": "string"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "waitlist_count": {
                                            "type": "integer"
                                        },
                                        "seated_count": {
                                            "type": "integer"
                                        },
                                        "total_wait_time": {
                                            "type": "integer"
                                        },
                                        "average_wait_time": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Guest not found"
                    }
                }
            }
        },
        "/waitlist": {
            "post": {
                "tags": [
                    "Waitlist Management"
                ],
                "summary": "Create a waitlist entry",
                "operationId": "a6941ef4ea91ec3b314d2b51960ab9b6",
                "requestBody": {
                    "description": "Waitlist object that needs to be added to the system",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "guest_id",
                                    "estimated_wait_time",
                                    "is_vip",
                                    "is_regular"
                                ],
                                "properties": {
                                    "guest_id": {
                                        "type": "integer",
                                        "example": "1"
                                    },
                                    "estimated_wait_time": {
                                        "type": "integer",
                                        "example": "23"
                                    },
                                    "is_vip": {
                                        "type": "boolean",
                                        "example": "true"
                                    },
                                    "is_regular": {
                                        "type": "boolean",
                                        "example": "false"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Waitlist created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Waitlist created successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation errors"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/inventory-reports/orders-by-brand": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get orders by brand",
                "operationId": "b1ae8e3f390090b7e8042ba7cdbf60ff",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    },
                    {
                        "$ref": "#/components/parameters/report_type"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "nr_orders": {
                                            "type": "integer"
                                        },
                                        "total_amount_eur": {
                                            "type": "number"
                                        },
                                        "subtotal_eur": {
                                            "type": "number"
                                        },
                                        "total_discount_used_eur": {
                                            "type": "number"
                                        },
                                        "total_coupon_used_eur": {
                                            "type": "number"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/orders-by-brand-and-country": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get orders by brand and country",
                "operationId": "caefe70590aaeecb318dcaf85dcbbf74",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    },
                    {
                        "$ref": "#/components/parameters/report_type"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "country": {
                                                "type": "string"
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "period": {
                                                            "type": "string"
                                                        },
                                                        "order_count": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/orders-by-brand-and-city": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get orders by brand and city",
                "description": "Retrieves order statistics grouped by cities in Albania",
                "operationId": "45f69c1fce6fd6096d45626eea08bcc0",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    },
                    {
                        "$ref": "#/components/parameters/report_type"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "city": {
                                                "type": "string"
                                            },
                                            "data": {
                                                "type": "array",
                                                "items": {
                                                    "properties": {
                                                        "period": {
                                                            "type": "string"
                                                        },
                                                        "order_count": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/inventory-data": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get inventory data summary",
                "description": "Retrieves summary of products, categories, and collections",
                "operationId": "5fff92e786142d00ad1938686c5ec353",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "products": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "categories": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "collections": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/locations": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get locations summary",
                "description": "Retrieves summary of warehouses, physical stores, and ecommerce sites",
                "operationId": "bef1c97bc7ca76f2fa7b431ed8e1cdf3",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "warehouses": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "physical_stores": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "ecommerce_sites": {
                                            "properties": {
                                                "total": {
                                                    "type": "integer"
                                                },
                                                "active": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/upcoming-launches": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get upcoming product launches",
                "description": "Retrieves list of upcoming product launches",
                "operationId": "b9fd5db88700b42abb371a3e0e9ea225",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "title": {
                                                "type": "string"
                                            },
                                            "category": {
                                                "type": "string"
                                            },
                                            "launch_date": {
                                                "type": "string",
                                                "format": "date"
                                            },
                                            "initial_stock": {
                                                "type": "integer"
                                            },
                                            "pre_orders": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/inventory-distribution": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get inventory distribution",
                "description": "Retrieves inventory distribution across physical stores",
                "operationId": "7734ef071cbe5cf91d8245495ac41218",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "location": {
                                                "type": "string"
                                            },
                                            "value": {
                                                "type": "integer"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/channel-performance": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get channel performance",
                "description": "Retrieves performance metrics for different sales channels",
                "operationId": "68031d50492e494518f13077dc9e8ce6",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "channel": {
                                                "type": "string"
                                            },
                                            "sales_volume": {
                                                "type": "integer"
                                            },
                                            "revenue": {
                                                "type": "number"
                                            },
                                            "growth": {
                                                "type": "number"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/data-quality": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get data quality score",
                "description": "Retrieves data quality metrics for inventory data",
                "operationId": "a7f7f3910d28dd235f09b26393928d83",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "overallScore": {
                                            "type": "integer"
                                        },
                                        "factors": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "score": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/inventory-reports/all-report-data": {
            "get": {
                "tags": [
                    "Inventory Reports"
                ],
                "summary": "Get all report data",
                "description": "Retrieves comprehensive report including all inventory metrics",
                "operationId": "ea2080a1fcb2e61251fba5864ff44b98",
                "parameters": [
                    {
                        "$ref": "#/components/parameters/venue_short_code"
                    },
                    {
                        "$ref": "#/components/parameters/brand_id"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "inventory_data": {
                                            "$ref": "#/components/schemas/InventoryData"
                                        },
                                        "locations": {
                                            "$ref": "#/components/schemas/LocationsSummary"
                                        },
                                        "sync_status": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "venue_id": {
                                                        "type": "integer"
                                                    },
                                                    "sync_type": {
                                                        "type": "integer"
                                                    },
                                                    "method": {
                                                        "type": "string"
                                                    },
                                                    "third_party": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "datetime"
                                                    },
                                                    "completed_at": {
                                                        "type": "string",
                                                        "format": "datetime",
                                                        "nullable": true
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "upcoming_launches": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "category": {
                                                        "type": "string"
                                                    },
                                                    "launch_date": {
                                                        "type": "string",
                                                        "format": "date"
                                                    },
                                                    "initial_stock": {
                                                        "type": "integer"
                                                    },
                                                    "pre_orders": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "inventory_distribution": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "location": {
                                                        "type": "string"
                                                    },
                                                    "value": {
                                                        "type": "integer"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "channel_performance": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "channel": {
                                                        "type": "string"
                                                    },
                                                    "sales_volume": {
                                                        "type": "integer"
                                                    },
                                                    "revenue": {
                                                        "type": "number"
                                                    },
                                                    "growth": {
                                                        "type": "number"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "sync_health": {
                                            "properties": {
                                                "overview": {
                                                    "properties": {
                                                        "total_syncs": {
                                                            "type": "integer"
                                                        },
                                                        "successful_syncs": {
                                                            "type": "integer"
                                                        },
                                                        "failed_syncs": {
                                                            "type": "integer"
                                                        },
                                                        "success_rate": {
                                                            "type": "number"
                                                        },
                                                        "average_duration": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "by_type": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "error_summary": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                },
                                                "performance_trend": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "data_quality": {
                                            "properties": {
                                                "overallScore": {
                                                    "type": "integer"
                                                },
                                                "factors": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "score": {
                                                                "type": "integer"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations": {
            "get": {
                "tags": [
                    "Synchronizations"
                ],
                "summary": "Get all synchronizations",
                "operationId": "3d87ff62526f973dffee892197b57d1c",
                "parameters": [
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "date": {
                                                "type": "string",
                                                "example": "2024-07-15"
                                            },
                                            "time_completed": {
                                                "type": "string",
                                                "example": "16:40 PM"
                                            },
                                            "type": {
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Prices Sync"
                                                    },
                                                    "color": {
                                                        "type": "string",
                                                        "example": "#cd8438"
                                                    }
                                                },
                                                "type": "object"
                                            },
                                            "method": {
                                                "type": "string",
                                                "example": "Manual - API"
                                            },
                                            "errors_count": {
                                                "type": "integer",
                                                "example": 0
                                            },
                                            "third_party": {
                                                "type": "string",
                                                "example": "BookMaster"
                                            },
                                            "status": {
                                                "type": "string",
                                                "example": "completed"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/{sync}/errors": {
            "get": {
                "tags": [
                    "Synchronizations"
                ],
                "summary": "Get errors for a specific sync",
                "operationId": "00a70cd94e55bff40695cbfbfb9b3c14",
                "parameters": [
                    {
                        "name": "sync",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "properties": {
                                            "type": {
                                                "type": "string"
                                            },
                                            "message": {
                                                "type": "string"
                                            },
                                            "created_at": {
                                                "type": "string"
                                            },
                                            "context": {
                                                "type": "object"
                                            }
                                        },
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/health": {
            "get": {
                "tags": [
                    "Synchronizations"
                ],
                "summary": "Get synchronization health metrics",
                "operationId": "3675da3676e49a5e0de19067b8ee0a04",
                "parameters": [
                    {
                        "name": "venue_short_code",
                        "in": "query",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "date_range",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "24h",
                            "enum": [
                                "24h",
                                "7d",
                                "30d"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "overview": {
                                            "properties": {
                                                "total_syncs": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "successful_syncs": {
                                                    "type": "integer",
                                                    "example": 142
                                                },
                                                "failed_syncs": {
                                                    "type": "integer",
                                                    "example": 8
                                                },
                                                "success_rate": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 94.67
                                                },
                                                "average_duration": {
                                                    "type": "string",
                                                    "example": "2m 30s"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "by_type": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "Price Sync"
                                                    },
                                                    "total": {
                                                        "type": "integer",
                                                        "example": 50
                                                    },
                                                    "successful": {
                                                        "type": "integer",
                                                        "example": 48
                                                    },
                                                    "failed": {
                                                        "type": "integer",
                                                        "example": 2
                                                    },
                                                    "success_rate": {
                                                        "type": "number",
                                                        "example": 96
                                                    },
                                                    "average_duration": {
                                                        "type": "string",
                                                        "example": "1m 45s"
                                                    },
                                                    "last_sync_status": {
                                                        "type": "string",
                                                        "example": "successful"
                                                    },
                                                    "last_sync_time": {
                                                        "type": "string",
                                                        "example": "2024-03-27 14:30:00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "error_summary": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "type": {
                                                        "type": "string",
                                                        "example": "API"
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "example": 5
                                                    },
                                                    "percentage": {
                                                        "type": "number",
                                                        "example": 62.5
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        },
                                        "performance_trend": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "example": "2024-03-27"
                                                    },
                                                    "success_rate": {
                                                        "type": "number",
                                                        "example": 95
                                                    },
                                                    "average_duration": {
                                                        "type": "string",
                                                        "example": "2m 15s"
                                                    },
                                                    "total_syncs": {
                                                        "type": "integer",
                                                        "example": 10
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/do-sync/price": {
            "post": {
                "tags": [
                    "Alpha Synchronization"
                ],
                "summary": "Synchronize prices from Alpha system",
                "description": "Fetches and updates product prices from Alpha system",
                "operationId": "ec7e8453b9ab52da7ddfdae635ba1bea",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sync_date": {
                                        "description": "Date to sync from",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful synchronization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Synchronization completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "products_synced": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "variants_synced": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "sync_time": {
                                                    "type": "string",
                                                    "example": "2024-10-26 12:00:00"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid sync_date format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to connect to Alpha system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/do-sync/stock": {
            "post": {
                "tags": [
                    "Alpha Synchronization"
                ],
                "summary": "Synchronize SKUs from Alpha system",
                "description": "Fetches and updates product SKUs from Alpha system",
                "operationId": "701578e86d047d09b4597ab3d3358ecd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sync_date": {
                                        "description": "Date to sync from",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful synchronization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Synchronization completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "products_synced": {
                                                    "type": "integer",
                                                    "example": 100
                                                },
                                                "variants_synced": {
                                                    "type": "integer",
                                                    "example": 150
                                                },
                                                "sync_time": {
                                                    "type": "string",
                                                    "example": "2024-10-26 12:00:00"
                                                },
                                                "sync_id": {
                                                    "type": "integer",
                                                    "example": 1
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid sync_date format"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to connect to Alpha system"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/do-sync/stocks": {
            "post": {
                "tags": [
                    "Alpha Synchronization"
                ],
                "summary": "Synchronize stock quantities from Alpha system",
                "description": "Fetches and updates product stock levels from Alpha system",
                "operationId": "1d2e89ccd4d9efe082c0f7918fed3e8b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sync_date": {
                                        "description": "Date to sync from",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2024-10-26"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful synchronization",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Stock synchronization completed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "products_synced": {
                                                    "type": "integer"
                                                },
                                                "variants_synced": {
                                                    "type": "integer"
                                                },
                                                "zero_stock": {
                                                    "type": "integer"
                                                },
                                                "without_stock": {
                                                    "type": "integer"
                                                },
                                                "sync_time": {
                                                    "type": "string"
                                                },
                                                "sync_id": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/synchronizations/do-sync/calculate-stock": {
            "post": {
                "tags": [
                    "Alpha Synchronization"
                ],
                "summary": "Calculate total stock for products and variants",
                "operationId": "7676585715637ad1e66107349464a40b",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "sync_date": {
                                        "type": "string",
                                        "format": "date"
                                    },
                                    "type": {
                                        "type": "string",
                                        "enum": [
                                            "variants",
                                            "single"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "InventoryData": {
                "properties": {
                    "products": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "categories": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "collections": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "LocationsSummary": {
                "properties": {
                    "warehouses": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "physical_stores": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    },
                    "ecommerce_sites": {
                        "properties": {
                            "total": {
                                "type": "integer"
                            },
                            "active": {
                                "type": "integer"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "responses": {
            "404": {
                "description": "Waitlist guests not found"
            }
        },
        "parameters": {
            "venue_short_code": {
                "name": "venue_short_code",
                "in": "query",
                "description": "Venue short code for filtering data",
                "required": true,
                "schema": {
                    "type": "string"
                }
            },
            "brand_id": {
                "name": "brand_id",
                "in": "query",
                "description": "Brand ID for filtering data",
                "required": true,
                "schema": {
                    "type": "integer"
                }
            },
            "report_type": {
                "name": "type",
                "in": "query",
                "description": "Report aggregation type",
                "schema": {
                    "type": "string",
                    "default": "total",
                    "enum": [
                        "daily",
                        "weekly",
                        "monthly",
                        "yearly",
                        "total"
                    ]
                }
            }
        }
    },
    "tags": [
        {
            "name": "AI",
            "description": "AI"
        },
        {
            "name": "Accommodation",
            "description": "Operations related to Accommodation"
        },
        {
            "name": "Affiliate",
            "description": "Operations related to Affiliate"
        },
        {
            "name": "Analytics",
            "description": "Operations related to Analytics"
        },
        {
            "name": "Authentication",
            "description": "Operations related to Authentication"
        },
        {
            "name": "Blogs",
            "description": "Operations related to Blogs"
        },
        {
            "name": "Menu Management",
            "description": "Operations related to Menu Management"
        },
        {
            "name": "Customers",
            "description": "Operations related to Customers"
        },
        {
            "name": "Dashboard",
            "description": "Operations related to Dashboard"
        },
        {
            "name": "Staff Management",
            "description": "Operations related to Staff Management"
        },
        {
            "name": "End User Card API",
            "description": "Operations related to End User Car"
        },
        {
            "name": "Staff Management",
            "description": "Operations related to Staff Management"
        },
        {
            "name": "FAQs",
            "description": "Operations related to FAQ categories"
        },
        {
            "name": "FAQs",
            "description": "Operations related to Faqs"
        },
        {
            "name": "Feature Feedback API",
            "description": "Operations related to Feature Feedback"
        },
        {
            "name": "Guests",
            "description": "Operations related to Guests"
        },
        {
            "name": "Housekeeping Task",
            "description": "Operations related to Housekeeping Task"
        },
        {
            "name": "Inventory",
            "description": "Operations related to Inventory Management"
        },
        {
            "name": "Inventory",
            "description": "Operations related to Inventory Management"
        },
        {
            "name": "Legal API",
            "description": "Operations related to Legal Requests"
        },
        {
            "name": "Loyalty",
            "description": "Operations related to Loyalty"
        },
        {
            "name": "OccupancyRatesForecast",
            "description": "Operations related to OccupancyRatesForecast"
        },
        {
            "name": "Orders",
            "description": "Operations related to Orders"
        },
        {
            "name": "Payment Links",
            "description": "Operations related to Payment Links"
        },
        {
            "name": "Staff Management",
            "description": "Operations related to Staff Management"
        },
        {
            "name": "Staff Management",
            "description": "Operations related to Staff Management"
        },
        {
            "name": "Pricing Plans",
            "description": "Operations related to Pricing Plans"
        },
        {
            "name": "Menu Management",
            "description": "Operations related to Menu Management"
        },
        {
            "name": "Promotions",
            "description": "Operations related to Promotions"
        },
        {
            "name": "Reports",
            "description": "Operations related to Reports"
        },
        {
            "name": "Reservations",
            "description": "Operations related to Reservations"
        },
        {
            "name": "RestaurantConfiguration",
            "description": "Operations related to Restaurant Configuration"
        },
        {
            "name": "RestaurantPreOnboarding",
            "description": "Operations related to Restaurant PreOnboarding"
        },
        {
            "name": "Retail",
            "description": "Operations related to Retail"
        },
        {
            "name": "Staff Management",
            "description": "Operations related to Staff Management"
        },
        {
            "name": "SNReservations",
            "description": "Operations related to SNReservations"
        },
        {
            "name": "Table Management",
            "description": "Operations related to Table Management"
        },
        {
            "name": "Table Management",
            "description": "Operations related to Table Management"
        },
        {
            "name": "Template API",
            "description": "Operations related to Template"
        },
        {
            "name": "DoorDashDriveIntegration",
            "description": "Operations related to DoordashIntegration"
        },
        {
            "name": "UberEatsIntegration",
            "description": "Operations related to UberEatsIntegration"
        },
        {
            "name": "SuperadminVendorConfiguration",
            "description": "Operations related to Superadmin Vendor Configuration"
        },
        {
            "name": "VendorContactApplications",
            "description": "Operations related to Vendor Contact Applications"
        },
        {
            "name": "Waitlist Management",
            "description": "Operations related to Waitlist Management"
        },
        {
            "name": "Entertainment Venues",
            "description": "Operations related to Entertainment Venues"
        },
        {
            "name": "Inventory Reports",
            "description": "API endpoints for inventory reporting and analytics"
        },
        {
            "name": "Alpha Synchronization",
            "description": "API endpoints for syncing data with Alpha system"
        }
    ]
}